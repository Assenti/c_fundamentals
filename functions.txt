//Найти максимальные 3 числа, чтобы они не повторялись

#include <iostream>
#include <ctime>
using namespace std;

int main()
{
	srand(time(0));
	int const n = 6;
	int arr[n][n] = { 0 };
	int max1 = -2, max2 = -2, max3 = -2;

	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			arr[i][j] = rand() % 50;
			cout << arr[i][j] << "\t";
			if (arr[i][j] > max1 && arr[i][j] != max3 && arr[i][j] != max2)
			{
				max3 = max2;
				max2 = max1;
				max1 = arr[i][j];
			}
			else if (arr[i][j] > max2 && arr[i][j] != max1 && arr[i][j] != max3)
			{
				max3 = max2;
				max2 = arr[i][j];
			}
			else if (arr[i][j] > max3 && arr[i][j] != max2 && arr[i][j] != max1)
				max3 = arr[i][j];
		}
		cout << endl;
	}
	cout << max1 << " " << max2 << " " << max3 << endl;
	
	system("pause");
	return 0;
}



//******************** Ф У Н К Ц И И ***********************//

#include <iostream>
#include <time.h>

using namespace std;

//Functioins

int max(int a, int b)
{
	int max = 0; 
	if (a > b) // return a > b ? a : b;
		max = a;
	else
		max = b;
	return max;
}

void main()
{
	srand(time(0));
	int a, b, c;
	cin >> a >> b;
	c = max(a, b);
	cout << c << endl;
	system("pause");
}

// Простое (true) ли число или не простое (false)
#include <iostream>
#include <time.h>

using namespace std;

//Functioins

bool simple(int a)
{
	for (int i = 2; i < a/2+1; i++) // a/2+1 – корень числа
	{
		if (a % i == 0)
			return false;
		return true;
	}
	
}

void main()
{
	srand(time(0));
	int a,c;
	cin >> a;
	c = simple(a);
	cout << c << endl;
	system("pause");
}

// Function – array random
#include <iostream>
#include <time.h>
using namespace std;

//Functioins


void arr_rand(int arr[], int size)
{
	for (int i = 0; i < size; i++) 
	{
		arr[i] = rand() % 30;
		cout << arr[i] << " ";
	}
	cout << endl;
}

void main()
{
	srand(time(0));
	int const size = 5;
	int arr[size];
	int arr2[25];
	arr_rand(arr, size);
	arr_rand(arr2, 25);
		
	system("pause");
}

// Функции – Рандом с заданным коридором от a до b 
#include <iostream>
#include <time.h>
using namespace std;

//Functioins

void arr_rand(int arr[], int size, int a, int b)
{
	for (int i = 0; i < size; i++) 
	{
		arr[i] = rand() % (b-a)+a;
		cout << arr[i] << " ";
	}
	cout << endl;
}

void main()
{
	srand(time(0));
	int a, b;
	int const size = 5;
	int arr[size];
	int arr2[25];
	arr_rand(arr, size, 1, 10);
	arr_rand(arr2, 25, 5, 8);
		
	system("pause");
}

//Функция inverse array
#include <iostream>
#include <time.h>
using namespace std;

//Functioins



void random_arr(int arr[], int size)
{
	for (int i = 0; i < size; i++)
	{
		arr[i] = rand() % 30;
		cout << arr[i] << " ";
	}
	cout << endl;
}

void inverse_arr(int arr[], int size)
{
	for (int i = 0; i < size/2; i++) 
	{
		swap(arr[i],arr[size-1-i]);
	}
	
}

void main()
{
	srand(time(0));
	int a, b;
	int const size = 5;
	int arr[size];
	
	random_arr(arr, size);
	inverse_arr(arr, size);
	for (int i = 0; i < size; i++)
	{
		cout << arr[i] << " ";
	}
	cout << endl;
		
	system("pause");
}

// Счастливое число (если сумма первых 3 цифр равна суммам последних 3 цифр)
#include <iostream>
#include <time.h>
using namespace std;

//Functioins

bool happy_ticket(int a)
{
	int sum1 = 0, sum2 = 0;
	for (int i = 0; i < 6; i++)
	{
		if (i < 3)
			sum1 += a % 10;
		else
			sum2 += a % 10;
		a /= 10;
	}
	return (sum1 == sum2);
}


void main()
{
	int a;
	cin >> a;
	cout << happy_ticket(a) << endl;
			
	system("pause");
}
